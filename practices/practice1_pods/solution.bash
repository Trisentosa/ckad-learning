# How many pods exist on the system
kubectl get pods 

# Create new pod with nginx image
kubectl run nginx --image=nginx

# What is the image used to create the new pods (generated by the practice system)
kubectl describe pod newpods-llst # Find Containers -> container_name -> Image

# Which nodes are these pods placed on?
kubectl describe pod newpods-llst # Find Node
# or
kubectl get pods -o wide # use wide option to show the node of the pods

# How many containers are part of the pod `webapp`
kubectl get pods # webapp 1/2 (so 2, the first number represent number of running containers)
#or
kubectl describe pod webapp # Find Containers directory and see how many containers

# What images are used in the `webapp` pod
kubectl describe pod webapp

# What state is `agentx` in pod `webapp`
kubectl describe pod webapp # find State field in the `agentx` container

# What causes `agentx` to be error
kubectl describe pod webapp #look in the event section of describe, fail to pull image

# Delete webapp pod
kubectl delete pod webapp

# create new pod with image redis 123 by using yaml file
kubectl run redis --image=redis123 --dry-run=client -o yaml > redis.yaml
cat redis.yaml
kubectl create -f redis.yaml
kubectl get pods

# fix the image (because wrong image, should be redis)
vim redis.yaml # change image name
kubectl apply -f redis.yaml # apply the changes
